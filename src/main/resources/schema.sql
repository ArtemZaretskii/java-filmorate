DROP TABLE IF EXISTS likes;
DROP TABLE IF EXISTS film_genre;
DROP TABLE IF EXISTS friends;
DROP TABLE IF EXISTS genres;
DROP TABLE IF EXISTS films;
DROP TABLE IF EXISTS mpa;
DROP TABLE IF EXISTS users;

CREATE TABLE IF NOT EXISTS users
(
    id  INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    email    varchar(255),
    login    varchar(255),
    name     varchar(255),
    birthday Date
);

CREATE TABLE IF NOT EXISTS mpa
(
    id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name   varchar(5)
);

CREATE TABLE IF NOT EXISTS films
(
    id      INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name         VARCHAR(100),
    description  VARCHAR(200),
    release_date Date,
    duration     INT,
    rate         INT,
    mpa_id       INT,
    FOREIGN KEY (mpa_id) REFERENCES mpa (id)
);

CREATE TABLE IF NOT EXISTS genres
(
    id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name     VARCHAR(15)
);

CREATE TABLE IF NOT EXISTS film_genre
(
    film_id       INT,
    genre_id      INT,
    PRIMARY KEY (film_id, genre_id),
    FOREIGN KEY (film_id) REFERENCES films (id),
    FOREIGN KEY (genre_id) REFERENCES genres (id)
);

CREATE TABLE IF NOT EXISTS friends
(
    user_id       INT,
    friend_id     INT,
    status        BOOLEAN,
    FOREIGN KEY (user_id) REFERENCES users (id),
    FOREIGN KEY (friend_id) REFERENCES users (id),
    PRIMARY KEY (user_id, friend_id)
);

CREATE TABLE IF NOT EXISTS likes
(
    film_id  INT,
    user_id  INT,
    FOREIGN KEY (user_id) REFERENCES users (id),
    FOREIGN KEY (film_id) REFERENCES films (id),
    CONSTRAINT likes_pk PRIMARY KEY (film_id, user_id)
);
